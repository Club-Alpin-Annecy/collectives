"""Add payment models

Revision ID: 564b1ed538b2
Revises: 3ce1483e95a5
Create Date: 2020-05-01 20:55:20.894627

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "564b1ed538b2"
down_revision = "3ce1483e95a5"
branch_labels = None
depends_on = None


def upgrade():
    with op.batch_alter_table("registrations") as batch_op:
        batch_op.alter_column(
            "status",
            existing_type=sa.Enum("Active", "Rejected"),
            type_=sa.Enum("Active", "Rejected", "PaymentPending"),
            nullable=False,
        )

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "payment_options",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=256), nullable=False),
        sa.Column('price', sa.Numeric(precision=8, scale=2), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["events.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_payment_options_event_id"),
        "payment_options",
        ["event_id"],
        unique=False,
    )
    op.create_table(
        "payments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=True),
        sa.Column("payment_option_id", sa.Integer(), nullable=False),
        sa.Column("creditor_id", sa.Integer(), nullable=False),
        sa.Column("reporter_id", sa.Integer(), nullable=False),
        sa.Column(
            "payment_type",
            sa.Enum("Online", "Check", "Cash", name="paymenttype"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "Initiated",
                "Approved",
                "Cancelled",
                "Refused",
                "Expired",
                name="paymentstatus",
            ),
            nullable=False,
        ),
        sa.Column("creation_time", sa.DateTime(), nullable=False),
        sa.Column("finalization_time", sa.DateTime(), nullable=True),
        sa.Column("processor_token", sa.String(length=256), nullable=False),
        sa.Column("raw_metadata", sa.Text(), nullable=False),
        sa.Column("amount_charged", sa.Numeric(precision=8, scale=2), nullable=False),
        sa.Column("amount_paid", sa.Numeric(precision=8, scale=2), nullable=False),
        sa.ForeignKeyConstraint(["creditor_id"], ["users.id"],),
        sa.ForeignKeyConstraint(["payment_option_id"], ["payment_options.id"],),
        sa.ForeignKeyConstraint(["registration_id"], ["registrations.id"],),
        sa.ForeignKeyConstraint(["reporter_id"], ["users.id"],),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_index(
        op.f("ix_payments_creditor_id"), "payments", ["creditor_id"], unique=False
    )
    op.create_index(
        op.f("ix_payments_processor_token"),
        "payments",
        ["processor_token"],
        unique=False,
    )
    op.create_index(
        op.f("ix_payments_registration_id"),
        "payments",
        ["registration_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_payments_reporter_id"), "payments", ["reporter_id"], unique=False
    )
    # op.create_foreign_key(None, 'events', 'users', ['main_leader_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint(None, 'events', type_='foreignkey')
    # op.drop_index(op.f("ix_payments_reporter_id"), table_name="payments")
    # op.drop_index(op.f("ix_payments_registration_id"), table_name="payments")
    # op.drop_index(op.f("ix_payments_processor_token"), table_name="payments")
    # op.drop_index(op.f("ix_payments_creditor_id"), table_name="payments")
    op.drop_table("payments")
    # op.drop_index(op.f("ix_payment_options_event_id"), table_name="payment_options")
    op.drop_table("payment_options")
    # ### end Alembic commands ###

    with op.batch_alter_table("registrations") as batch_op:
        batch_op.alter_column(
            "status",
            type_=sa.Enum("Active", "Rejected"),
            existing_type=sa.Enum("Active", "Rejected", "PaymentPending"),
            nullable=False,
        )
